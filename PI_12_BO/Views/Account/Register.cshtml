@model PI_12_BO.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<h2>@ViewBag.Title.</h2>
<div class="row">
    <div class="col-md-6 ">
        <img src="~/Imagens/5-verticalfood-tumblr-com-mahi-mahi-banh-mi-with-spicy-curried-mayo-fried.png" />
    </div>
    <div class="col-md-4">
        @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            <h4>Create a new account.</h4>
            <hr />
            @Html.ValidationSummary("", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(m => m.Email, new { @class = "col-md-3 control-label" })
                <div class="col-md-8">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.FullName, new { @class = "col-md-3 control-label" })
                <div class="col-md-8">
                    @Html.TextBoxFor(m => m.FullName, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Gender, new { @class = "col-md-3 control-label" })
                <div class="col-md-4">
                    @Html.RadioButtonFor(m => m.Gender, "M", new { @id = "Masculino" })
                    @Html.Label("Masculino", new { @class = "control-label", @for = "Masculino" })
                </div>
                <div class="col-md-4">
                    @Html.RadioButtonFor(m => m.Gender, "F", new { @id = "Feminino" })
                    @Html.Label("Feminino", new { @class = "control-label", @for = "Feminino" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.BirthDate, new { @class = "col-md-3 control-label" })
                <div class="col-md-8">
                    @Html.TextBoxFor(m => m.BirthDate, new { @class = "form-control" })
                    <small>Format: YY/MM/DD</small>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Password, new { @class = "col-md-3 control-label" })
                <div class="col-md-8">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-3 control-label" })
                <div class="col-md-8">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" class="btn btn-default" value="Register" />
                </div>
            </div>
        }
        </div>
    </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
            <script>

                $.validator.methods.range = function (value, element, param) {
                    var globalizedValue = value.replace(",", ".");
                    return this.optional(element) || (globalizedValue >= param[0] && globalizedValue <= param[1]);
                }

                $.validator.methods.number = function (value, element) {
                    return this.optional(element) || /-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
                }
                //Date dd/MM/yyyy
                $.validator.methods.date = function (value, element) {
                    var date = value.split("/");
                    return this.optional(element) || !/Invalid|NaN/.test(new Date(date[2], date[1], date[0]).toString());
                }
            </script>
        }
